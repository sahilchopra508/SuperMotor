{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  bookings: [],\n  activeBooking: null,\n  loading: false,\n  error: null\n};\nconst bookingSlice = createSlice({\n  name: 'bookings',\n  initialState,\n  reducers: {\n    fetchBookingsStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchBookingsSuccess: (state, action) => {\n      state.loading = false;\n      state.bookings = action.payload;\n      state.error = null;\n    },\n    fetchBookingsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    createBookingStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    createBookingSuccess: (state, action) => {\n      state.loading = false;\n      state.bookings.push(action.payload);\n      state.activeBooking = action.payload;\n      state.error = null;\n    },\n    createBookingFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    updateBookingStatus: (state, action) => {\n      const {\n        id,\n        status\n      } = action.payload;\n      const booking = state.bookings.find(b => b.id === id);\n      if (booking) {\n        booking.status = status;\n      }\n    },\n    cancelBooking: (state, action) => {\n      var _state$activeBooking;\n      state.bookings = state.bookings.filter(booking => booking.id !== action.payload);\n      if (((_state$activeBooking = state.activeBooking) === null || _state$activeBooking === void 0 ? void 0 : _state$activeBooking.id) === action.payload) {\n        state.activeBooking = null;\n      }\n    },\n    setActiveBooking: (state, action) => {\n      state.activeBooking = action.payload;\n    },\n    clearActiveBooking: state => {\n      state.activeBooking = null;\n    },\n    rescheduleBooking: (state, action) => {\n      const {\n        id,\n        newDate,\n        newTime\n      } = action.payload;\n      const booking = state.bookings.find(b => b.id === id);\n      if (booking) {\n        booking.date = newDate;\n        booking.time = newTime;\n        booking.status = 'Rescheduled';\n      }\n    }\n  }\n});\nexport const {\n  fetchBookingsStart,\n  fetchBookingsSuccess,\n  fetchBookingsFailure,\n  createBookingStart,\n  createBookingSuccess,\n  createBookingFailure,\n  updateBookingStatus,\n  cancelBooking,\n  setActiveBooking,\n  clearActiveBooking,\n  rescheduleBooking\n} = bookingSlice.actions;\nexport default bookingSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","bookings","activeBooking","loading","error","bookingSlice","name","reducers","fetchBookingsStart","state","fetchBookingsSuccess","action","payload","fetchBookingsFailure","createBookingStart","createBookingSuccess","push","createBookingFailure","updateBookingStatus","id","status","booking","find","b","cancelBooking","_state$activeBooking","filter","setActiveBooking","clearActiveBooking","rescheduleBooking","newDate","newTime","date","time","actions","reducer"],"sources":["C:/Users/Sahil Chopra/Downloads/SuperMotor/frontend/src/store/slices/bookingSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  bookings: [],\n  activeBooking: null,\n  loading: false,\n  error: null,\n};\n\nconst bookingSlice = createSlice({\n  name: 'bookings',\n  initialState,\n  reducers: {\n    fetchBookingsStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchBookingsSuccess: (state, action) => {\n      state.loading = false;\n      state.bookings = action.payload;\n      state.error = null;\n    },\n    fetchBookingsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    createBookingStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    createBookingSuccess: (state, action) => {\n      state.loading = false;\n      state.bookings.push(action.payload);\n      state.activeBooking = action.payload;\n      state.error = null;\n    },\n    createBookingFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    updateBookingStatus: (state, action) => {\n      const { id, status } = action.payload;\n      const booking = state.bookings.find(b => b.id === id);\n      if (booking) {\n        booking.status = status;\n      }\n    },\n    cancelBooking: (state, action) => {\n      state.bookings = state.bookings.filter(booking => booking.id !== action.payload);\n      if (state.activeBooking?.id === action.payload) {\n        state.activeBooking = null;\n      }\n    },\n    setActiveBooking: (state, action) => {\n      state.activeBooking = action.payload;\n    },\n    clearActiveBooking: (state) => {\n      state.activeBooking = null;\n    },\n    rescheduleBooking: (state, action) => {\n      const { id, newDate, newTime } = action.payload;\n      const booking = state.bookings.find(b => b.id === id);\n      if (booking) {\n        booking.date = newDate;\n        booking.time = newTime;\n        booking.status = 'Rescheduled';\n      }\n    },\n  },\n});\n\nexport const {\n  fetchBookingsStart,\n  fetchBookingsSuccess,\n  fetchBookingsFailure,\n  createBookingStart,\n  createBookingSuccess,\n  createBookingFailure,\n  updateBookingStatus,\n  cancelBooking,\n  setActiveBooking,\n  clearActiveBooking,\n  rescheduleBooking,\n} = bookingSlice.actions;\n\nexport default bookingSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}